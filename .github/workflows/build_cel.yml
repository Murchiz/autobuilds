name: Build Celeritas

on:
  workflow_dispatch:
    inputs:
      minecraft_version:
        description: 'Minecraft version'
        required: true
        type: choice
        options:
          - 'all'
          - '1.21.8'
          - '1.21.1'
          - '1.20.1'
          - '1.12.2'
          - '1.10.2'
          - '1.7.10'
          - '1.2.5'
          - '1.0.0-beta.8.1'
          - '1.0.0-beta.7.3'
        default: 'all'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Clone repository
      run: git clone https://git.taumc.org/embeddedt/celeritas.git .
      shell: pwsh
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'graalvm'
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: false
    
    - name: Cache build outputs
      uses: actions/cache@v4
      with:
        path: |
          build/*
          !build/libs/
          .gradle/
          versions/*/build/
          !versions/*/build/libs/
        key: ${{ runner.os }}-celeritas-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle.properties', 'stonecutter.gradle.kts') }}-${{ github.event.inputs.minecraft_version }}
        restore-keys: |
          ${{ runner.os }}-celeritas-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle.properties', 'stonecutter.gradle.kts') }}-all
          ${{ runner.os }}-celeritas-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle.properties', 'stonecutter.gradle.kts') }}-
          ${{ runner.os }}-celeritas-build-
      
    - name: Build for specific version
      if: ${{ github.event.inputs.minecraft_version != 'all' }}
      run: | 
        echo "Building for version: ${{ github.event.inputs.minecraft_version }}"
        ./gradlew -Ptarget_versions="${{ github.event.inputs.minecraft_version }}" packageJar
      
    - name: Build for all versions
      if: ${{ github.event.inputs.minecraft_version == 'all' }}
      run: ./gradlew packageJar
      
    - name: Determine version for filtering
      if: ${{ github.event.inputs.minecraft_version != 'all' }}
      id: filter_version
      run: |
        VERSION="${{ github.event.inputs.minecraft_version }}"
        
        # Check if it's a beta version
        if [[ "$VERSION" == *"beta"* ]]; then
          # Extract the numeric part after beta (e.g., 1.0.0-beta.8.1 -> 1.8.1)
          BETA_VERSION=$(echo "$VERSION" | sed 's/.*beta\./1./')
          echo "short_version=b$BETA_VERSION" >> $GITHUB_OUTPUT
          echo "Detected beta version: mcb$BETA_VERSION"
        else
          # Regular version - convert 1.20.1 to 20.1, 1.21.8 to 21.8, etc.
          SHORT_VERSION=$(echo "$VERSION" | sed 's/^1\.//')
          echo "short_version=$SHORT_VERSION" >> $GITHUB_OUTPUT
          echo "Detected regular version: mc$SHORT_VERSION"
        fi
    
    - name: Upload artifacts for specific version
      if: ${{ github.event.inputs.minecraft_version != 'all' }}
      uses: actions/upload-artifact@v4
      with:
        name: celeritas-${{ github.event.inputs.minecraft_version }}-${{ github.run_number }}
        path: build/libs/**/*mc${{ steps.filter_version.outputs.short_version }}*.jar
        if-no-files-found: error
    
    - name: Upload artifacts for all versions
      if: ${{ github.event.inputs.minecraft_version == 'all' }}
      uses: actions/upload-artifact@v4
      with:
        name: celeritas-all-${{ github.run_number }}
        path: build/libs/**/*.jar
        if-no-files-found: error
