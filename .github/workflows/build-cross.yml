name: Cross-compile Corretto 21 for Windows from WSL

on:
  push:
    branches:
      - main # Or any other branch you want to trigger the build from

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Corretto source code
      uses: actions/checkout@v4
      with:
        repository: corretto/corretto-21
        ref: lilliput-2

    - name: Setup Java for the build environment
      uses: actions/setup-java@v4
      with:
          distribution: 'temurin'
          java-version: '21'

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y autoconf make zip unzip build-essential wget

    # Corrected step to robustly download, unzip, and move the Windows Boot JDK
    - name: Download and setup Windows Boot JDK
      run: |
        # Download the JDK
        wget -O boot-jdk.zip https://corretto.aws/downloads/latest/amazon-corretto-21-x64-windows-jdk.zip
        
        # Unzip to a temporary directory
        unzip -q boot-jdk.zip -d boot-jdk-unzipped
        
        # For debugging: List the contents of the temporary directory to see the actual folder name
        echo "Contents of boot-jdk-unzipped:"
        ls -l boot-jdk-unzipped
        
        # Move the single nested directory to be /opt/boot-jdk.
        # This wildcard (*) is more robust and will match whatever the top-level directory is named.
        sudo mv boot-jdk-unzipped/* /opt/boot-jdk
        
        # Verification step for debugging
        echo "Verifying final path /opt/boot-jdk:"
        ls -l /opt/boot-jdk
        echo "Verifying bin directory exists:"
        ls -l /opt/boot-jdk/bin

    - name: Configure the build for cross-compilation
      run: |
        bash configure --with-boot-jdk=/opt/boot-jdk --build=x86_64-pc-linux-gnu --host=x86_64-pc-linux-gnu --target=x86_64-w64-mingw32
    
    - name: Build Corretto
      run: |
        make images

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: corretto-21-windows
        path: build/linux-x86_64-server-release/images/jdk
